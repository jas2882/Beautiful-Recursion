[{"C:\\Sites\\fractal-tree\\src\\index.js":"1","C:\\Sites\\fractal-tree\\src\\ContentBody.js":"2","C:\\Sites\\fractal-tree\\src\\Draw.js":"3","C:\\Sites\\fractal-tree\\src\\Canvas.js":"4","C:\\Sites\\fractal-tree\\src\\LeftMenu.js":"5","C:\\Sites\\fractal-tree\\src\\RightMenu.js":"6","C:\\Sites\\fractal-tree\\src\\NumberSpinner.js":"7","C:\\Sites\\fractal-tree\\src\\ColorPicker.js":"8"},{"size":500,"mtime":1608431495345,"results":"9","hashOfConfig":"10"},{"size":349,"mtime":1611082736685,"results":"11","hashOfConfig":"10"},{"size":4916,"mtime":1611181746418,"results":"12","hashOfConfig":"10"},{"size":504,"mtime":1611083573189,"results":"13","hashOfConfig":"10"},{"size":1177,"mtime":1611198771791,"results":"14","hashOfConfig":"10"},{"size":966,"mtime":1611195998505,"results":"15","hashOfConfig":"10"},{"size":713,"mtime":1611165470342,"results":"16","hashOfConfig":"10"},{"size":3132,"mtime":1611199050832,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1syxyds",{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Sites\\fractal-tree\\src\\index.js",[],"C:\\Sites\\fractal-tree\\src\\ContentBody.js",[],"C:\\Sites\\fractal-tree\\src\\Draw.js",[],"C:\\Sites\\fractal-tree\\src\\Canvas.js",[],"C:\\Sites\\fractal-tree\\src\\LeftMenu.js",[],"C:\\Sites\\fractal-tree\\src\\RightMenu.js",["36"],"import { ColorPicker } from './ColorPicker';\r\nimport { NumberSpinner } from './NumberSpinner';\r\nimport { Render, Clear, Random } from './Draw';\r\n\r\nconst RightMenu = () => {\r\n  return (\r\n    <div className=\"side-menu-right\" id=\"side-menu\">\r\n      \r\n      {/* Increment values min max etc... values are commented in Draw.js with the variable declarations */}\r\n      <ColorPicker\r\n        id=\"colorPicker\"\r\n        min={0}\r\n        max={255}\r\n        increment=\"1\"\r\n        initValue={0}\r\n      />\r\n      <section className=\"update-canvas\">\r\n        <button className=\"btn random-btn tool-container\" onClick={() => Random()}>\r\n          Random\r\n        </button>\r\n        <button className=\"btn clear-btn tool-container\" onClick={() => Clear()}>\r\n          Clear\r\n        </button>\r\n         <button className=\"btn render-btn tool-container\" onClick={() => Render()}>\r\n          Render\r\n        </button>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\nexport default RightMenu;","C:\\Sites\\fractal-tree\\src\\NumberSpinner.js",[],"C:\\Sites\\fractal-tree\\src\\ColorPicker.js",["37","38"],"//import { AdjustValue } from './Draw';\r\n\r\nexport const ColorPicker = (props) => {\r\n  {/* \r\n    surround color display with opacity slide\r\n    box shadow, gradient and background-stroke color toggle \r\n    dynamic box-shadow on tool components\r\n    maybe frame canvas\r\n\r\n    var slider = document.getElementById(\"myRange\");\r\n    var output = document.getElementById(\"demo\");\r\n    output.innerHTML = slider.value; // Display the default slider value\r\n\r\n    // Update the current slider value (each time you drag the slider handle)\r\n    slider.oninput = function() {\r\n      output.innerHTML = this.value;\r\n    }\r\n\r\n  */}\r\n\r\n  const { banner, current } = props;\r\n  const min = 0;\r\n  const max = 255;\r\n  // const colorPicked;\r\n  // const r,g,b;\r\n\r\n  //cs vision\r\n  return (\r\n    <div className=\"color-tool-container\" >\r\n      <div className=\"radio-container\">\r\n        <label className=\"tool-container radio-btn\">Stroke\r\n          <input className=\"radio-btn-glow\" type=\"radio\" name=\"radio\" onClick={() => console.log('check')} />\r\n            <span className=\"checkMark\"></span>\r\n        </label>\r\n        <label className=\"tool-container radio-btn\">Shadow\r\n          <input className=\"radio-btn-glow\" type=\"radio\" name=\"radio\" onClick={() => console.log('check')} />\r\n            <span className=\"checkMark\"></span>\r\n        </label>\r\n        <label className=\"tool-container radio-btn\">Canvas\r\n          <input className=\"radio-btn-glow\" type=\"radio\" name=\"radio\" onClick={() => console.log('check')} />\r\n           <span className=\"checkMark\"></span>\r\n        </label>\r\n      </div>\r\n\r\n      <section className=\"color-tool-display\">\r\n        <span className=\"slide-container themed\">\r\n          <input \r\n            className=\"vert slide-container slider\"\r\n            id=\"vert\"\r\n            orient=\"vertical\"\r\n            type=\"range\"\r\n            min=\"0\"\r\n            max=\"100\"\r\n          />\r\n        </span>\r\n        <span className=\"color-display\"></span>\r\n        <span className=\"slide-container themed\">\r\n          <input \r\n            className=\"vert slide-container slider\"\r\n            id=\"vert\" \r\n            type=\"range\" \r\n            orient=\"vertical\"\r\n          />\r\n        </span>\r\n      </section>\r\n      <section className=\"color-slider themed\">\r\n        <span className=\"horizontal slide-container themed\">\r\n          <input \r\n            className=\"slider\"\r\n            type=\"range\"\r\n            min={min}\r\n            max={max}\r\n            value={current}\r\n            id=\"red\"\r\n          />\r\n          </span>\r\n        <span className=\"horizontal slide-container themed\">\r\n          <input\r\n          className=\"slider\"\r\n          type=\"range\"\r\n          min={min}\r\n          max={max}\r\n          value={current}\r\n          id=\"green\"\r\n        />\r\n        </span>\r\n        <span className=\"horizontal slide-container themed\">\r\n        <input\r\n          className=\"slider\"\r\n          type=\"range\"\r\n          min={min}\r\n          max={max}\r\n          value={current}\r\n          id=\"blue\"\r\n        />\r\n        </span>\r\n      </section>\r\n      <button className=\"apply-btn themed\">Apply</button>\r\n    </div>\r\n  )\r\n}",{"ruleId":"39","severity":1,"message":"40","line":2,"column":10,"nodeType":"41","messageId":"42","endLine":2,"endColumn":23},{"ruleId":"43","severity":1,"message":"44","line":4,"column":3,"nodeType":"45","messageId":"46","endLine":19,"endColumn":6},{"ruleId":"39","severity":1,"message":"47","line":21,"column":11,"nodeType":"41","messageId":"42","endLine":21,"endColumn":17},"no-unused-vars","'NumberSpinner' is defined but never used.","Identifier","unusedVar","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","'banner' is assigned a value but never used."]